// Changes to this file requires a restart of the Dev Server if adding
export enum Listeners {
    JOIN_GAME_SUCCESS= "JOIN_GAME_SUCCESS",
    JOIN_GAME_ERROR = "JOIN_GAME_ERROR",
    GAME_UPDATE = "GAME_UPDATE",
    CARD_UPDATE = "CARD_UPDATE",
    TIMER_UPDATE = "TIMER_UPDATE",
    RELOAD_GAME_SESSION_SUCCESS = "RELOAD_GAME_SESSION_SUCCESS",
    RELOAD_GAME_SESSION_ERROR = 'RELOAD_GAME_SESSION_ERROR',
    REQUEST_SHARE_SUCCESS = "REQUEST_SHARE_SUCCESS",
    REQUEST_SHARE_ERROR = "REQUEST_SHARE_ERROR",
    SHARE_REQUEST_RECEIVED = "SHARE_REQUEST_RECEIVED",
    SHARE_REQUEST_REJECTED = "SHARE_REQUEST_REJECTED",
    REJECT_SHARE_SUCCESS = "REJECT_SHARE_SUCCESS",
    CARD_SHARE_ACCEPTED = "CARD_SHARE_ACCEPTED",
    PRIVATE_REVEAL_RECEIVED = "PRIVATE_REVEAL_RECEIVED",
    ANSWER_SHARE_ERROR = "ANSWER_SHARE_ERROR",
    CLEAR_EVENTS = "CLEAR_EVENTS",
    JOIN_ROOM = "JOIN_ROOM",
    HOSTAGE_UPDATE = "HOSTAGE_UPDATE",
    NEW_LEADER = "NEW_LEADER",
    CREATE_GAME_ERROR = "CREATE_GAME_ERROR",
    START_GAME_ERROR = "START_GAME_ERROR",
    END_ROUND_ERROR = "END_ROUND_ERROR",
    START_NEXT_ROUND_ERROR = 'START_NEXT_ROUND_ERROR',
    START_TIMER_ERROR = 'START_TIMER_ERROR',
    PAUSE_TIMER_ERROR = "PAUSE_TIMER_ERROR",
    RESTART_TIMER_ERROR = 'RESTART_TIMER_ERROR',
    REVEAL_CARD_ASSIGNMENT_ERROR = "REVEAL_CARD_ASSIGNMENT_ERROR",
    NOMINATE_HOSTAGE_ERROR = "NOMINATE_HOSTAGE_ERROR",
    NOMINATE_LEADER_ERROR = "NOMINATE_LEADER_ERROR",
    ABDICATE_LEADER_ERROR = 'ABDICATE_LEADER_ERROR',
    ANSWER_LEADERSHIP_OFFER_ERROR = 'ANSWER_LEADERSHIP_OFFER_ERROR',
    USURP_LEADER_ERROR = 'USURP_LEADER_ERROR',
    USURP_VOTE_ERROR = 'USURP_LEADER_ERROR'
}

export const actionListeners = () => {
    let enumValues:Array<string> = [];

    for(let value in Listeners) {
        enumValues.push( value );
    }

    return enumValues;
}